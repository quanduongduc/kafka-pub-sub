version: "3"

services:
  # Nginx API Gateway
  api-gateway:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx-config:/etc/nginx/conf.d
    depends_on:
      - registration-service
    networks:
      - gateway-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    expose:
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka-config:/kafka-config/
    networks:
      - kafka_network

  registration-service:
    build:
      context: ./services/registration
    expose:
      - 8000
    environment:
      - CELERY_BROKER_HOST=registration-redis-broker
      - CELERY_BROKER_PORT=6379
    depends_on:
      - kafka
      - registration-redis-broker
    volumes:
      - ./services/registration:/src
    networks:
      - kafka_network
      - gateway-network
      - registration-worker-net

  registration-redis-broker:
    image: redis:latest
    container_name: registration-redis-broker
    expose:
      - 6379
    volumes:
      - /registration-broker/data:/data
    networks:
      - registration-worker-net

  registration-worker:
    build:
      context: ./services/registration
      dockerfile: Dockerfile.worker
    volumes:
      - ./services/registration:/usr/src/app
    env_file:
      - services/registration/.env
    environment:
      - CELERY_BROKER_HOST=registration-redis-broker
      - CELERY_BROKER_PORT=6379
    depends_on:
      - registration-redis-broker
    networks:
      - registration-worker-net

  notification-service:
    build:
      context: ./services/notification
    depends_on:
      - kafka
    expose:
      - 8080
    env_file: ./services/notification/.env
    networks:
      - kafka_network
    # development only
    x-develop:
      watch:
        - action: rebuild
          path: ./services/notification/src
          target: /src/src

networks:
  gateway-network:
  kafka_network:
  registration-worker-net:
    internal: true
